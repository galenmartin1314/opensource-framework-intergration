<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
    http://www.springframework.org/schema/tx 
    http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
    http://www.springframework.org/schema/util 
    http://www.springframework.org/schema/util/spring-util-3.2.xsd
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context-3.2.xsd">
    <!-- 开启注解自动扫描 -->
    <context:annotation-config  />
    <!-- MybatisDao基类配置进来，以便Service类可以用注解的方式引入，然后就是扫描包路径，不扫描带有@Controller注解的类 -->
    <context:component-scan base-package="com.gm.ofi.orm.jdo">
    	<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <!-- 强制使用CGLIB代理  -->
    <aop:aspectj-autoproxy proxy-target-class="true"/>
	<!-- 加载属性文件 -->
	<context:property-placeholder location="classpath:jdbc.properties" />
	<!-- JDBC数据源配置 -->
	<!-- 配置连接池 c3p0连接池
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="${datasource.driverClassName}" />
		<property name="jdbcUrl" value="${datasource.url}" />
		<property name="user" value="${datasource.username}" />
		<property name="password" value="${datasource.password}" />
		<property name="maxPoolSize" value="${c3p0.maxPoolSize}" />
		<property name="minPoolSize" value="${c3p0.minPoolSize}" />
		<property name="initialPoolSize" value="${c3p0.initialPoolSize}" />
		<property name="maxIdleTime" value="${c3p0.maxIdleTime}" />
	</bean>
	-->
	<!-- apache dbcp连接池配置
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${datasource.driverClassName}" />
		<property name="url" value="${datasource.url}" />
		<property name="username" value="${datasource.username}" />
		<property name="password" value="${datasource.password}" />
		<property name="maxActive" value="${dbcp.maxActive}" />
		<property name="maxIdle" value="${dbcp.maxIdle}" />
		<property name="maxWait" value="${dbcp.maxWait}" />
		<property name="initialSize" value="${dbcp.initialSize}"/>
	</bean>
	-->
	<!-- BoneCP配置 -->
	<!-- <bean id="dataSource" class="com.jolbox.bonecp.BoneCPDataSource" destroy-method="close">
		<property name="driverClass" value="${datasource.driverClassName}" />
		<property name="jdbcUrl" value="${datasource.url}" />
		<property name="username" value="${datasource.username}" />
		<property name="password" value="${datasource.password}" />
		<property name="idleConnectionTestPeriodInMinutes" value="${bonecp.idleConnectionTestPeriodInMinutes}"/>
		<property name="idleMaxAgeInMinutes" value="${bonecp.idleMaxAgeInMinutes}"/>
		<property name="maxConnectionsPerPartition" value="${bonecp.maxConnectionsPerPartition}"/>
		<property name="minConnectionsPerPartition" value="${bonecp.minConnectionsPerPartition}"/>
		<property name="partitionCount" value="${bonecp.partitionCount}"/>
		<property name="acquireIncrement" value="${bonecp.acquireIncrement}"/>
		<property name="statementsCacheSize" value="${bonecp.statementsCacheSize}"/>
		<property name="releaseHelperThreads" value="${bonecp.releaseHelperThreads}"/>
		<property name="poolAvailabilityThreshold" value="${bonecp.poolAvailabilityThreshold}"/>
	</bean>
	 -->
	<!-- 配置sessionFactory -->
	<!-- <bean id="sessionFactory" class="org.datanucleus.api.jdo.JDOPersistenceManagerFactory">
		<property name="connectionFactory" ref="dataSource" />
		<property name="nontransactionalRead" value="true" />
	</bean> -->
	<bean id="sessionFactory" class="org.springframework.orm.jdo.LocalPersistenceManagerFactoryBean">
		<property name="configLocation" value="classpath:kodo.properties"/>
	</bean>
	<!--事务管理JdoTransactionManager-->
    <bean id="transactionManager" class="org.springframework.orm.jdo.JdoTransactionManager">
		<property name="persistenceManagerFactory" ref="sessionFactory"/>
	</bean>
	<!-- 配置事务的传播特性 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="increasePrice*" propagation="REQUIRED" />
			<tx:method name="someOtherBusinessMethod" propagation="REQUIRES_NEW" />
			<tx:method name="*" propagation="SUPPORTS" read-only="true" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut id="serviceMethods"
			expression="execution(* com.gm.ofi.orm.jdo.service..*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="serviceMethods" />
	</aop:config>
</beans>