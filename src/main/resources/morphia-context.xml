<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
    http://www.springframework.org/schema/tx 
    http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
    http://www.springframework.org/schema/util 
    http://www.springframework.org/schema/util/spring-util-3.2.xsd
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context-3.2.xsd">
	<!-- 加载属性文件 -->
	<context:property-placeholder location="classpath:mongodb-jdbc.properties" />
	
	
	<!-- 使用工厂创建mongo实例 -->  
	<bean id="mongo" class="com.gm.ofi.mongo.factory.MongoFactoryBean">
	    <!-- mongoDB的配置对象 -->
	    <!-- <property name="mongoClientOptions" ref="mongoClientOptions"/> -->
	    
	    <!-- 是否主从分离(读取从库)，默认为false，读写都在主库 -->
	    <property name="readSecondary" value="false"/>
	    
	    <!-- 设定写策略，默认为WriteConcern.SAFE，优先级高于mongoOptions中的safe -->
	    <property name="writeConcern" value="SAFE"/>
	    
	    <!-- 设定服务器列表，默认为localhost:27017 -->
	    <property name="serverStrings">
	        <array>
	            <value>${mongoDB.server}</value>
	        </array>
	    </property>
	</bean>

	 <!-- 使用工厂创建morphia实例，同时完成类映射操作 -->
	 <bean id="morphia" class="com.gm.ofi.mongo.factory.MorphiaFactoryBean" >
	    <!-- 指定要扫描的POJO包路径 -->
	    <property name="mapPackages">
	        <array>
	            <value>com.gm.ofi.model</value>
	        </array>
	    </property>
	    
	    <!-- 指定要映射的类 -->
	    <!-- <property name="mapClasses">
	        <array>
	            <value>com.gm.ofi.model.Hotel</value>
	            <value>com.gm.ofi.model.Address</value>
	        </array>
	    </property> -->
	    
	    <!-- 扫描包时是否忽略不可用的类，默认为false -->
	    <!-- <property name="ignoreInvalidClasses" value="false"/> -->
	</bean>
	
	<!-- 使用工厂创建datastore，同时完成index和caps的确认操作 -->
	<bean id="datastore" class="com.gm.ofi.mongo.factory.DatastoreFactoryBean" >
	    <property name="morphia" ref="morphia"/>
	    <property name="mongo" ref="mongo"/>
	    
	    <!-- collection的名称 -->
	    <property name="dbName" value="${mongoDB.dbName}"/>
	    
	    <!-- 用户名和密码可以为空 -->
	    <!-- <property name="username" value="mongoDB.username"/>
	    <property name="password" value="mongoDB.password"/> -->
	    
	    <!-- 是否进行index和caps的确认操作，默认为flase -->
	    <property name="toEnsureIndexes" value="true"/>
	    <property name="toEnsureCaps" value="true"/>
	</bean>
	<!-- ===============以下是具体DAO的实现===================== -->
	<bean id="hotelDAO" class="com.gm.ofi.mongo.dao.HotelDAO">
		<constructor-arg ref="datastore"/>
	</bean>
</beans>